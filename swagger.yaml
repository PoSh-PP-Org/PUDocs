    openapi: 3.0.3
    info:
      version: 0.0.1
      title: Management API to IT services portal - by Microb.vn
      description: |-
        A Set of API's to communicate with the IT services portal.
        It provides access to tables to fill statistics graphs published by the portal
        and endpoint to retrieve and update outstanding requests made by the portal /users
    servers:
      - url: http://srvr2019.coda.local:5000/cli/api
        description: Our current test server
    paths:
      /request/{type}:
        get:
          summary: Returns request(s) based on query type .
          parameters:
          - name: type
            in: path
            required: true
            description: |-
              Either the value 'open[int]', 'process[int]' or an integer value.<br>
              - 'open[int]' will return all open requests with a maximum of [int] per call.<br> >> [int]is an optional number greater than 1
              - 'process[int]' will return all requestsID's (only) of open requests with a maximum of [int] per call, and set the status of these requests into 'InProgess'.<br> >> [int]is an optional number greater than 1
              - any numeric value will return the entry where cliRequestID matches the entered number.<br>
              
            schema:
              type : string
          responses:
            '200':
              description: Zero or more open request objects.  Please note that when type is 'process', only the cliRequestId attribute is returned!
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      cliRequestId:
                        description: Unique sequence number.
                        type: integer
                        format: int64
                        example: 4
                      cliTenantCode:
                        description: clientcode the request was made for
                        type: string
                        example: cli
                      cliRequestType:
                        description: Code for the request type
                        type: string
                        example: R-MAD-001
                      cliRequestor:
                        description: UserID of requestor
                        type: string
                        example: User@cuckoomail.org
                      cliPayload:
                        description: Request specific JSON request payload
                        type: string
                        example: "{\"resourcename\":\"HPAIO\",\"allowaccess\":\"rob,guda\",\"removeaccess\":\"nobody\"}"
                      cliStatus:
                        description: |-
                          Request processing status. can be Open, InProgress, Failed, Closed
                        type: string
                        example: Open
                      cliNotes:
                        description: "Processing notes/feedback for enduser"
                        type: string
                        example: "2024-03-23 18:00:01 Submitted"
            '400':
              description: "Bad request. (with optional error details)"
        put:
          summary: Updates a request based on body payload content .
          parameters:
          - name: type
            in: path
            required: true
            description: |-
              The numeric value of the request entry to update
            schema:
              type : integer
          requestBody:
            description: Update Payload
            required: true
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - updatePayload
                  properties:
                    cliRequestor:
                      type: string
                      description: Required! Must be same as requestor in entry to update
                    cliTenantCode:
                      type: string
                      description: Required! Must be same as TenantCode in entry to update
                    cliStatus:
                      type: string
                      description: Optional new statuscode. Acceptable values are Open, Closed, ClosedIncomplete and Failed
                    cliNotes:
                      type: string
                      description: Optional set of notes. Can include Cr/Lf characters

          responses:
            '200':
              description: Processing done, Ok
            '400':
              description: "Bad request. (with optional error details)"
      /stats/{client}:
        delete:
          summary: Removes old entries that were used to display in graph or table.
          parameters:
          - name: client
            in: path
            required: true
            description: |-
              Must be an existing client code.<br>
            schema:
              type : string
          requestBody:
            description: Delete Payload
            required: true
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - deletePayload
                  properties:
                    ElementType:
                      type: string
                      description: Required! Must contain the Element type of the data to remove
                    before:
                      type: string
                      description: Required! Must contain a valid date in format 'yyyy-MM-dd HH:mm:ss'
          responses:
            '200':
              description: Processed, (Result was -amount removed-)
            '400':
              description: "Bad request. (with optional error details)"
        post:
          summary: Adds Graph/Table statistics entries found in payload.
          parameters:
          - name: client
            in: path
            required: true
            description: |-
              Must be an existing client code.<br>
            schema:
              type : string
          requestBody:
            description: Post Payload
            required: true
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - updatePayload
                  properties:
                    elementType:
                      type: string
                      description: Required! Indicates which graph/table is target for the posted data.
                    elementAction:
                      type: string
                      description: |-
                        Required. Must be either "AddNew" or "Append".
                        When "AddNew" is used, a new dataset is created, with a new date-time stamp
                        When "Append" is used, the payload is added to the already existing payload in the newest dataset.
                    statisticsObject:
                      type: string
                      description: This is the JSON payload needs to be added/appended for the Graph/Table
          responses:
            '200':
              description: Processing done, Ok
            '400':
              description: "Bad request. (with optional error details)"
